// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id
  email     String  @unique
  password  String
  firstname String?
  lastname  String?
  credits   Decimal @default(0) @db.Money

  CreateAt DateTime @default(now())
  UpdateAt DateTime @updatedAt

  Inventory Inventory[]
  TopupHistory TopupHistory[]
}

model Product {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  price       Decimal @default(0) @db.Money
  image       String  @default("https://via.placeholder.com/400x250")
  CreateAt DateTime @default(now())
  UpdateAt DateTime @updatedAt

  Inventory Inventory[]
}

model Inventory {
  id         Int     @id @default(autoincrement())
  user_id    String
  user       User    @relation(references: [id], fields: [user_id], onDelete: Cascade, onUpdate: Cascade)
  product_id Int
  product    Product @relation(references: [id], fields: [product_id], onDelete: Cascade, onUpdate: Cascade)
  
  boughtDate DateTime @default(now())
}

model TopupHistory { 
  id Int @id @default(autoincrement())
  user_id String
  user       User    @relation(references: [id], fields: [user_id], onDelete: Cascade, onUpdate: Cascade)
  amount Decimal @db.Money
  status TopupStatus @default(PENDING)
  CreateAt DateTime @default(now())
}

enum TopupStatus {
  PENDING
  PAID
}